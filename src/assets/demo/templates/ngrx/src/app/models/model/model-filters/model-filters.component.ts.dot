import {Component, Input, OnInit} from '@angular/core';
import {{{=it.m.names.upperCamel}}SearchParams} from '../{{=it.m.names.hyphen}}-search-params';{{?it.m.d.s}}
import {{{=it.m.names.upperCamel}}} from '../{{=it.m.names.hyphen}}';
import {{{=it.m.names.upperCamel}}Service} from '../{{=it.m.names.hyphen}}.service';{{?}}{{~it.m.d.f(f => f.searchable): d}}
import {{{=d.names.upperCamel}}} from '../../{{=d.names.hyphen}}/{{=d.names.hyphen}}';
import {{{=d.names.upperCamel}}Service} from '../../{{=d.names.hyphen}}/{{=d.names.hyphen}}.service';{{~}}

@Component({
  selector: 'anms-{{=it.m.names.hyphen}}-filters',
  templateUrl: './{{=it.m.names.hyphen}}-filters.component.html',
  styleUrls: ['./{{=it.m.names.hyphen}}-filters.component.scss']
})
export class {{=it.m.names.upperCamel}}FiltersComponent implements OnInit {

  /**
   * The filters
   *
   * @type {{{=it.m.names.upperCamel}}SearchParams}
   */
  @Input() {{=it.m.names.lowerCamel}}SearchParams: {{=it.m.names.upperCamel}}SearchParams = new {{=it.m.names.upperCamel}}SearchParams();{{~it.m.f.r.f(r => r.searchable) : r}}

  /**
   * The list to show in the {{=r.names.wordsLower}} drop-down
   *
   * @type {{{=r.m.names.upperCamel}}[]}
   */
  {{=r.names.lowerCamel}}List: {{=r.m.names.upperCamel}}[] = [];{{~}}

  /**
   * Constructor
   * {{~it.m.d.f(f => f.searchable, false): d}}
   * @param {{{=d.names.upperCamel}}Service} {{=d.names.lowerCamel}}Service{{~}}
   */
  constructor({{~it.m.d.f(f => f.searchable, false): d}}private {{=d.names.lowerCamel}}Service: {{=d.names.upperCamel}}Service,
              {{~}}) {
  }

  /**
   * Init
   */
  ngOnInit() {{{~it.m.f.r.f(r => r.searchable) : r}}
    // Get {{=r.names.wordsLower}} list
    this.{{=r.m.names.lowerCamel}}Service.list({ _page: 0, _limit: 100 })
      .then(({{=r.m.names.lowerCamel}}List) => {
        this.{{=r.names.lowerCamel}}List = {{=r.m.names.lowerCamel}}List.items;
      });{{~}}
  }

  /**
   * Called when an input is changed
   */
  onChange() {
    this.{{=it.m.names.lowerCamel}}SearchParams.next();
  }

}
