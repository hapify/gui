<div class="container">
    <div class="row">
        <div class="offset-md-2 col-md-8 offset-lg-3 col-lg-6 offset-xl-4 col-xl-4 mt-3 mb-3 mt-lg-5 mb-lg-5">
            <form class="{{=it.m.names.hyphen}}-form w-100" [formGroup]="form" (ngSubmit)="onSubmit()">
{{~it.m.f.l : f}}{{? !f.internal }}
                <!-- {{=f.names.wordsUpper}} -->
                <mat-form-field class="w-100 mb-3">
{{?f.type==='string'}}
                    <input matInput
                           placeholder="{{=it.o}} '{{=it.m.names.underscore}}_placeholder_{{=f.names.underscore}}' | translate {{=it.c}}"
                           id="{{=f.names.underscore}}"
                           formControlName="{{=f.names.underscore}}"
                           class="form-control"
                           [(ngModel)]="{{=it.m.names.lowerCamel}}.props.{{=f.names.underscore}}">
{{??f.type==='number'}}
                    <input matInput
                           type="number"
                           placeholder="{{=it.o}} '{{=it.m.names.underscore}}_placeholder_{{=f.names.underscore}}' | translate {{=it.c}}"
                           id="{{=f.names.underscore}}"
                           formControlName="{{=f.names.underscore}}"
                           class="form-control"
                           [(ngModel)]="{{=it.m.names.lowerCamel}}.props.{{=f.names.underscore}}">
{{??f.type==='datetime'}}
                    <input matInput
                           [matDatepicker]="picker_{{=f.names.underscore}}"
                           placeholder="{{=it.o}} '{{=it.m.names.underscore}}_placeholder_{{=f.names.underscore}}' | translate {{=it.c}}"
                           id="{{=f.names.underscore}}"
                           formControlName="{{=f.names.underscore}}"
                           class="form-control"
                           [(ngModel)]="{{=it.m.names.lowerCamel}}.props.{{=f.names.underscore}}">
                    <mat-datepicker-toggle matSuffix [for]="picker_{{=f.names.underscore}}"></mat-datepicker-toggle>
                    <mat-datepicker #picker_{{=f.names.underscore}}></mat-datepicker>
{{??f.type==='boolean'}}
                    <mat-select placeholder="{{=it.o}} '{{=it.m.names.underscore}}_placeholder_{{=f.names.underscore}}' | translate {{=it.c}}"
                                formControlName="{{=f.names.underscore}}"
                                [(ngModel)]="{{=it.m.names.lowerCamel}}.props.{{=f.names.underscore}}">
                        <mat-option [value]="false">{{=it.o}} '{{=it.m.names.underscore}}_{{=f.names.underscore}}_false' | translate {{=it.c}}</mat-option>
                        <mat-option [value]="true">{{=it.o}} '{{=it.m.names.underscore}}_{{=f.names.underscore}}_true' | translate {{=it.c}}</mat-option>
                    </mat-select>
{{?}}
                    <mat-error
                            *ngIf="form.controls['{{=f.names.underscore}}'].invalid && (form.controls['{{=f.names.underscore}}'].dirty || form.controls['{{=f.names.underscore}}'].touched)"
                            class="alert alert-danger mt-2">
                        <div *ngIf="form.controls['{{=f.names.underscore}}'].errors.required">
                            {{=it.o}} '{{=it.m.names.underscore}}_error_{{=f.names.underscore}}_required' | translate {{=it.c}}
                        </div>
                        <div *ngIf="form.controls['{{=f.names.underscore}}'].errors.pattern && !form.controls['{{=f.names.underscore}}'].errors.required">
                            {{=it.o}} '{{=it.m.names.underscore}}_error_{{=f.names.underscore}}_format' | translate {{=it.c}}
                        </div>
                    </mat-error>
                </mat-form-field>
                <!-- /{{=f.names.wordsUpper}} -->
{{?}}{{~}}
                <button class="mt-4" mat-raised-button color="primary" [disabled]="form.invalid">
                    {{=it.o}} '{{=it.m.names.underscore}}_action_save' | translate {{=it.c}}
                </button>
            </form>
        </div>
    </div>
</div>
