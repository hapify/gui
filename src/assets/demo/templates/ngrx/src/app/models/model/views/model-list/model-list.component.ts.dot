import {Component, OnDestroy, OnInit} from '@angular/core';
import {ActivatedRoute} from '@angular/router';
import {Location} from '@angular/common';
import {Subscription} from 'rxjs/Subscription';
import {{{=it.m.names.upperCamel}}SearchParams} from '../../{{=it.m.names.hyphen}}-search-params';
import {Helpers} from '@app/shared';

@Component({
  selector: 'anms-{{=it.m.names.hyphen}}-list',
  templateUrl: './{{=it.m.names.hyphen}}-list.component.html',
  styleUrls: ['./{{=it.m.names.hyphen}}-list.component.scss']
})
export class {{=it.m.names.upperCamel}}ListComponent implements OnInit, OnDestroy {

  /**
   * The filters
   *
   * @type {{{=it.m.names.upperCamel}}SearchParams}
   */
  {{=it.m.names.lowerCamel}}SearchParams: {{=it.m.names.upperCamel}}SearchParams = new {{=it.m.names.upperCamel}}SearchParams();

  /**
   * The query subscription
   *
   * @type {Subscription}
   */
  querySubscription: Subscription;

  /**
   * The search params subscription
   *
   * @type {Subscription}
   */
  paramsSubscription: Subscription;

  /**
   * Constructor
   *
   * @param {ActivatedRoute} route
   * @param {location} location
   */
  constructor(private route: ActivatedRoute,
              private location: Location) {
  }

  /**
   * Init
   */
  ngOnInit() {
    // Get results when params change
    this.paramsSubscription = this.{{=it.m.names.lowerCamel}}SearchParams.subscribe(() => {
      const params = this.{{=it.m.names.lowerCamel}}SearchParams.toObject();
      // Update query string
      this.location.replaceState('/{{=it.m.names.hyphen}}', Helpers.toQueryString(params));
    });
    // Init the search from query params
    this.querySubscription = this.route.queryParams.subscribe(params => {
      this.{{=it.m.names.lowerCamel}}SearchParams.fromObject(params);
    });
  }

  /**
   * Destroy
   */
  ngOnDestroy() {
    this.paramsSubscription.unsubscribe();
    this.querySubscription.unsubscribe();
  }

}
